-- MySQL Script generated by MySQL Workbench
-- Mon Mar 11 16:23:23 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Batalla_de_Niquitao
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Batalla_de_Niquitao
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Batalla_de_Niquitao` DEFAULT CHARACTER SET utf8 ;
USE `Batalla_de_Niquitao` ;

-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Telefonos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Telefonos` (
  `idTelefonos` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Telefono` VARBINARY(255) NOT NULL,
  `Telefono2` VARBINARY(255) NULL,
  PRIMARY KEY (`idTelefonos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Correos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Correos` (
  `idCorreos` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Correo` VARBINARY(255) NOT NULL,
  `Correo2` VARBINARY(255) NULL,
  PRIMARY KEY (`idCorreos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Estado` (
  `idEstado` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Estado` VARBINARY(255) NOT NULL,
  PRIMARY KEY (`idEstado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Municipio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Municipio` (
  `idMunicipio` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Municipio` VARBINARY(255) NOT NULL,
  `Estado` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`idMunicipio`),
  INDEX `Estado_idx` (`Estado` ASC) ,
  CONSTRAINT `Estado`
    FOREIGN KEY (`Estado`)
    REFERENCES `Batalla_de_Niquitao`.`Estado` (`idEstado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Ciudad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Ciudad` (
  `idCiudad` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Ciudad` VARBINARY(255) NOT NULL,
  `Codigo_P` VARBINARY(255) NOT NULL,
  `Municipio` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`idCiudad`),
  INDEX `Municipio_idx` (`Municipio` ASC) ,
  CONSTRAINT `Municipio`
    FOREIGN KEY (`Municipio`)
    REFERENCES `Batalla_de_Niquitao`.`Municipio` (`idMunicipio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Parroquia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Parroquia` (
  `idParroquia` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Parroquia` VARBINARY(255) NOT NULL,
  `Ciudad` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`idParroquia`),
  INDEX `Ciudad_idx` (`Ciudad` ASC) ,
  CONSTRAINT `Ciudad`
    FOREIGN KEY (`Ciudad`)
    REFERENCES `Batalla_de_Niquitao`.`Ciudad` (`idCiudad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Direccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Direccion` (
  `idDireccion` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Casa` VARBINARY(255) NOT NULL,
  `Calle` VARBINARY(255) NOT NULL,
  `Vereda` VARBINARY(255) NULL,
  `Piso` VARBINARY(255) NULL,
  `Edificio` VARBINARY(255) NULL,
  `Punto_R` VARBINARY(255) NOT NULL,
  `Parroquia` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`idDireccion`),
  INDEX `Parroquia_idx` (`Parroquia` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Representante_I`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Representante_I` (
  `Cedula_RI` BIGINT(0) UNSIGNED NOT NULL,
  `Nombres_RI` VARBINARY(255) NOT NULL,
  `Apellidos_RI` VARBINARY(255) NOT NULL,
  `Telefono_RI` BIGINT(0) UNSIGNED NOT NULL,
  `Correo_RI` BIGINT(0) UNSIGNED NOT NULL,
  `Direccion_RI` BIGINT(0) UNSIGNED NOT NULL,
  `FechaN_RI` DATE NOT NULL,
  `Sexo_RI` VARBINARY(255) NOT NULL,
  `Tipo_RI` VARBINARY(255) NOT NULL,
  PRIMARY KEY (`Cedula_RI`),
  INDEX `Telefono_R_idx` (`Telefono_RI` ASC) ,
  INDEX `Correo_R_idx` (`Correo_RI` ASC) ,
  INDEX `Direccion_RI_idx` (`Direccion_RI` ASC) ,
  CONSTRAINT `Telefono_R`
    FOREIGN KEY (`Telefono_RI`)
    REFERENCES `Batalla_de_Niquitao`.`Telefonos` (`idTelefonos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Correo_R`
    FOREIGN KEY (`Correo_RI`)
    REFERENCES `Batalla_de_Niquitao`.`Correos` (`idCorreos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Direccion_RI`
    FOREIGN KEY (`Direccion_RI`)
    REFERENCES `Batalla_de_Niquitao`.`Direccion` (`idDireccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Mensualidad_RI`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Mensualidad_RI` (
  `idMensualidad_RI` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Mes_RI` VARBINARY(255) NOT NULL,
  `VigenciaI_RI` DATE NOT NULL,
  `VigenciaF_RI` DATE NOT NULL,
  PRIMARY KEY (`idMensualidad_RI`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`M_and_V`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`M_and_V` (
  `idM_and_V` BIGINT(0) UNSIGNED NOT NULL,
  `Mision` VARCHAR(1024) NOT NULL,
  `Vision` VARCHAR(1024) NOT NULL,
  PRIMARY KEY (`idM_and_V`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Colegio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Colegio` (
  `idColegio` BIGINT(0) UNSIGNED NOT NULL,
  `Director_nombre` VARBINARY(256) NOT NULL,
  `Director_cedula` VARBINARY(256) NOT NULL,
  `Colegio_telefonos` BIGINT(0) UNSIGNED NOT NULL,
  `MV` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`idColegio`),
  INDEX `colegio_telefonos_idx` (`Colegio_telefonos` ASC) ,
  INDEX `colegio_MV_idx` (`MV` ASC) ,
  CONSTRAINT `colegio_telefonos`
    FOREIGN KEY (`Colegio_telefonos`)
    REFERENCES `Batalla_de_Niquitao`.`Telefonos` (`idTelefonos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `colegio_MV`
    FOREIGN KEY (`MV`)
    REFERENCES `Batalla_de_Niquitao`.`M_and_V` (`idM_and_V`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Plan_Estudio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Plan_Estudio` (
  `idPlan_Estudio` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Nombre_PE` VARBINARY(255) NOT NULL,
  `Tipo_PE` VARBINARY(255) NOT NULL,
  `Observacion_PE` VARBINARY(255) NULL,
  `Colegio_PE` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`idPlan_Estudio`),
  INDEX `Colegio_idx` (`Colegio_PE` ASC) ,
  CONSTRAINT `Colegio`
    FOREIGN KEY (`Colegio_PE`)
    REFERENCES `Batalla_de_Niquitao`.`Colegio` (`idColegio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Matricula`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Matricula` (
  `idMatricula` BIGINT(0) UNSIGNED NOT NULL,
  `Observacion` VARBINARY(255) NULL,
  `Plan_M` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`idMatricula`),
  INDEX `Plan_M_idx` (`Plan_M` ASC) ,
  CONSTRAINT `Plan_M`
    FOREIGN KEY (`Plan_M`)
    REFERENCES `Batalla_de_Niquitao`.`Plan_Estudio` (`idPlan_Estudio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Seccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Seccion` (
  `idSeccion` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Seccion` VARBINARY(255) NOT NULL,
  PRIMARY KEY (`idSeccion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Estudiante_II`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Estudiante_II` (
  `Cedula_EII` BIGINT(0) UNSIGNED NOT NULL,
  `Nombres_EII` VARBINARY(255) NOT NULL,
  `Apellidos_EII` VARBINARY(255) NOT NULL,
  `Matricula_EII` BIGINT(0) UNSIGNED NOT NULL,
  `FechaN_EII` DATE NOT NULL,
  `Sexo_EII` VARBINARY(255) NOT NULL,
  `Seccion_EII` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`Cedula_EII`),
  INDEX `Matricula_EII_idx` (`Matricula_EII` ASC) ,
  INDEX `Seccion_EII_idx` (`Seccion_EII` ASC) ,
  CONSTRAINT `Matricula_EII`
    FOREIGN KEY (`Matricula_EII`)
    REFERENCES `Batalla_de_Niquitao`.`Matricula` (`idMatricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Seccion_EII`
    FOREIGN KEY (`Seccion_EII`)
    REFERENCES `Batalla_de_Niquitao`.`Seccion` (`idSeccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Recuperacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Recuperacion` (
  `idRecuperacion` BIGINT(0) UNSIGNED NOT NULL,
  `Pregunta1` VARBINARY(255) NOT NULL,
  `Pregunta2` VARBINARY(255) NOT NULL,
  `Respuesta1` VARBINARY(255) NOT NULL,
  `Respuesta2` VARBINARY(255) NOT NULL,
  PRIMARY KEY (`idRecuperacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Administrativo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Administrativo` (
  `idAdministrativo` BIGINT(0) UNSIGNED NOT NULL,
  `Nombres_A` VARBINARY(255) NOT NULL,
  `Apellidos_A` VARBINARY(255) NOT NULL,
  `Telefono_A` VARBINARY(255) NOT NULL,
  `Correo_A` VARBINARY(255) NOT NULL,
  PRIMARY KEY (`idAdministrativo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Materia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Materia` (
  `idMateria` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Materia_M` VARBINARY(255) NOT NULL,
  `HoraI_M` TIME NOT NULL,
  `HoraF_M` TIME NOT NULL,
  `Plan_Estudio_M` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`idMateria`),
  INDEX `Plan_Estudio_M_idx` (`Plan_Estudio_M` ASC) ,
  CONSTRAINT `Plan_Estudio_M`
    FOREIGN KEY (`Plan_Estudio_M`)
    REFERENCES `Batalla_de_Niquitao`.`Plan_Estudio` (`idPlan_Estudio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Lapso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Lapso` (
  `idLapso` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Nombre_L` VARBINARY(255) NOT NULL,
  PRIMARY KEY (`idLapso`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Salon`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Salon` (
  `idSalon` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Salon` VARBINARY(255) NOT NULL,
  PRIMARY KEY (`idSalon`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Contrato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Contrato` (
  `idContrato` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `VigenciaI_C` DATE NOT NULL,
  `VigenciaF_C` DATE NOT NULL,
  PRIMARY KEY (`idContrato`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Profesor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Profesor` (
  `Cedula_P` BIGINT(0) UNSIGNED NOT NULL,
  `Nombres_P` VARBINARY(255) NOT NULL,
  `Apellidos_P` VARBINARY(255) NOT NULL,
  `Telefonos_P` BIGINT(0) UNSIGNED NOT NULL,
  `Correos_P` BIGINT(0) UNSIGNED NOT NULL,
  `Direccion_P` BIGINT(0) UNSIGNED NOT NULL,
  `FechaN_P` DATE NOT NULL,
  `Sexo_P` VARBINARY(255) NOT NULL,
  `Titulo_U_P` VARBINARY(255) NOT NULL,
  `Contrato_P` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`Cedula_P`),
  INDEX `Correos_P_idx` (`Correos_P` ASC) ,
  INDEX `Telefonos_P_idx` (`Telefonos_P` ASC) ,
  INDEX `Direccion_P_idx` (`Direccion_P` ASC) ,
  INDEX `fk_Profesor_Contrato1_idx` (`Contrato_P` ASC) ,
  CONSTRAINT `Correos_P`
    FOREIGN KEY (`Correos_P`)
    REFERENCES `Batalla_de_Niquitao`.`Correos` (`idCorreos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Telefonos_P`
    FOREIGN KEY (`Telefonos_P`)
    REFERENCES `Batalla_de_Niquitao`.`Telefonos` (`idTelefonos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Direccion_P`
    FOREIGN KEY (`Direccion_P`)
    REFERENCES `Batalla_de_Niquitao`.`Direccion` (`idDireccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Profesor_Contrato1`
    FOREIGN KEY (`Contrato_P`)
    REFERENCES `Batalla_de_Niquitao`.`Contrato` (`idContrato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Tipo_Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Tipo_Usuario` (
  `idTipo_Usuario` BIGINT(0) UNSIGNED NOT NULL,
  `Tipo_T` VARBINARY(255) NOT NULL,
  PRIMARY KEY (`idTipo_Usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Usuario` (
  `idUsuario` BIGINT(0) UNSIGNED NOT NULL,
  `Clave_U` VARBINARY(255) NOT NULL,
  `Tipo_Usuario_idTipo_Usuario` BIGINT(0) UNSIGNED NOT NULL,
  `Recuperacion_idRecuperacion` BIGINT(0) UNSIGNED NOT NULL,
  `Administrativo_idAdministrativo` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`idUsuario`),
  INDEX `fk_Usuario_Tipo_Usuario1_idx` (`Tipo_Usuario_idTipo_Usuario` ASC) ,
  INDEX `fk_Usuario_Recuperacion1_idx` (`Recuperacion_idRecuperacion` ASC) ,
  INDEX `fk_Usuario_Administrativo1_idx` (`Administrativo_idAdministrativo` ASC) ,
  CONSTRAINT `fk_Usuario_Tipo_Usuario1`
    FOREIGN KEY (`Tipo_Usuario_idTipo_Usuario`)
    REFERENCES `Batalla_de_Niquitao`.`Tipo_Usuario` (`idTipo_Usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_Recuperacion1`
    FOREIGN KEY (`Recuperacion_idRecuperacion`)
    REFERENCES `Batalla_de_Niquitao`.`Recuperacion` (`idRecuperacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_Administrativo1`
    FOREIGN KEY (`Administrativo_idAdministrativo`)
    REFERENCES `Batalla_de_Niquitao`.`Administrativo` (`idAdministrativo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Representante_I_has_Mensualidad_RI`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Representante_I_has_Mensualidad_RI` (
  `Representante_I_Cedula_RI` BIGINT(0) UNSIGNED NOT NULL,
  `Mensualidad_RI_idMensualidad_RI` BIGINT(0) UNSIGNED NOT NULL,
  `Estudiante_M` BIGINT(0) UNSIGNED NOT NULL,
  `Total_pagar` FLOAT NOT NULL,
  `Fecha_pago` DATE NOT NULL,
  `Observacion` VARBINARY(255) NULL,
  PRIMARY KEY (`Representante_I_Cedula_RI`, `Mensualidad_RI_idMensualidad_RI`, `Estudiante_M`),
  INDEX `fk_Representante_I_has_Mensualidad_RI_Mensualidad_RI1_idx` (`Mensualidad_RI_idMensualidad_RI` ASC) ,
  INDEX `fk_Representante_I_has_Mensualidad_RI_Representante_I1_idx` (`Representante_I_Cedula_RI` ASC) ,
  INDEX `Estudiante_Mensualidad_idx` (`Estudiante_M` ASC) ,
  CONSTRAINT `fk_Representante_I_has_Mensualidad_RI_Representante_I1`
    FOREIGN KEY (`Representante_I_Cedula_RI`)
    REFERENCES `Batalla_de_Niquitao`.`Representante_I` (`Cedula_RI`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Representante_I_has_Mensualidad_RI_Mensualidad_RI1`
    FOREIGN KEY (`Mensualidad_RI_idMensualidad_RI`)
    REFERENCES `Batalla_de_Niquitao`.`Mensualidad_RI` (`idMensualidad_RI`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Estudiante_Mensualidad`
    FOREIGN KEY (`Estudiante_M`)
    REFERENCES `Batalla_de_Niquitao`.`Estudiante_II` (`Cedula_EII`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Materia_has_Notas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Materia_has_Notas` (
  `Materia_idMateria` BIGINT(0) UNSIGNED NOT NULL,
  `Lapso_idLapso` BIGINT(0) UNSIGNED NOT NULL,
  `Nota` FLOAT NOT NULL,
  `Fecha_carga` DATE NOT NULL,
  `Observacion` VARBINARY(255) NULL,
  `Estudiante_MN` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`Materia_idMateria`, `Lapso_idLapso`, `Estudiante_MN`),
  INDEX `fk_Materia_has_Notas_Notas1_idx` (`Lapso_idLapso` ASC) ,
  INDEX `fk_Materia_has_Notas_Materia1_idx` (`Materia_idMateria` ASC) ,
  INDEX `Estudiante_N_idx` (`Estudiante_MN` ASC) ,
  CONSTRAINT `fk_Materia_has_Notas_Materia1`
    FOREIGN KEY (`Materia_idMateria`)
    REFERENCES `Batalla_de_Niquitao`.`Materia` (`idMateria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Materia_has_Notas_Notas1`
    FOREIGN KEY (`Lapso_idLapso`)
    REFERENCES `Batalla_de_Niquitao`.`Lapso` (`idLapso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Estudiante_N`
    FOREIGN KEY (`Estudiante_MN`)
    REFERENCES `Batalla_de_Niquitao`.`Estudiante_II` (`Cedula_EII`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Profesor_has_Materia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Profesor_has_Materia` (
  `Cedula_P_id` BIGINT(0) UNSIGNED NOT NULL,
  `Materia_id` BIGINT(0) UNSIGNED NOT NULL,
  `Fecha_imparte` DATE NOT NULL,
  `Observacion` VARBINARY(255) NULL,
  PRIMARY KEY (`Cedula_P_id`, `Materia_id`),
  INDEX `Materia_id_idx` (`Materia_id` ASC) ,
  CONSTRAINT `Cedula_P_id`
    FOREIGN KEY (`Cedula_P_id`)
    REFERENCES `Batalla_de_Niquitao`.`Profesor` (`Cedula_P`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Materia_id`
    FOREIGN KEY (`Materia_id`)
    REFERENCES `Batalla_de_Niquitao`.`Materia` (`idMateria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Literal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Literal` (
  `idLiteral` BIGINT(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `Literal` VARBINARY(256) NOT NULL,
  `Descripcion` VARCHAR(256) NOT NULL,
  PRIMARY KEY (`idLiteral`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Materia_has_Literal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Materia_has_Literal` (
  `Materia_idMateria` BIGINT(0) UNSIGNED NOT NULL,
  `Lapso_idLapso` BIGINT(0) UNSIGNED NOT NULL,
  `Literal_L` BIGINT(0) UNSIGNED NOT NULL,
  `Fecha_carga` DATE NOT NULL,
  `Observacion_ML` VARCHAR(1024) NOT NULL,
  `Recomendaciones` VARCHAR(256) NOT NULL,
  `Estudiante_ML` BIGINT(0) UNSIGNED NOT NULL,
  PRIMARY KEY (`Materia_idMateria`, `Lapso_idLapso`, `Estudiante_ML`),
  INDEX `fk_Materia_has_Literal_Materia1_idx` (`Materia_idMateria` ASC) ,
  INDEX `Estudiante_Literal_idx` (`Estudiante_ML` ASC) ,
  INDEX `Lapso_Literal_idx` (`Lapso_idLapso` ASC) ,
  INDEX `Literal_Literal_idx` (`Literal_L` ASC) ,
  CONSTRAINT `fk_Materia_has_Literal_Materia1`
    FOREIGN KEY (`Materia_idMateria`)
    REFERENCES `Batalla_de_Niquitao`.`Materia` (`idMateria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Estudiante_Literal`
    FOREIGN KEY (`Estudiante_ML`)
    REFERENCES `Batalla_de_Niquitao`.`Estudiante_II` (`Cedula_EII`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Lapso_Literal`
    FOREIGN KEY (`Lapso_idLapso`)
    REFERENCES `Batalla_de_Niquitao`.`Lapso` (`idLapso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Literal_Literal`
    FOREIGN KEY (`Literal_L`)
    REFERENCES `Batalla_de_Niquitao`.`Literal` (`idLiteral`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Plan_Estudio_has_Seccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Plan_Estudio_has_Seccion` (
  `Plan_Estudio_idPlan_Estudio` BIGINT(0) UNSIGNED NOT NULL,
  `Seccion_idSeccion` BIGINT(0) UNSIGNED NOT NULL,
  `Profesor_Guia` BIGINT(0) UNSIGNED NOT NULL,
  `Salon` BIGINT(0) UNSIGNED NOT NULL,
  `Observacion` VARBINARY(255) NULL,
  PRIMARY KEY (`Plan_Estudio_idPlan_Estudio`, `Seccion_idSeccion`),
  INDEX `fk_Plan_Estudio_has_Seccion_Seccion1_idx` (`Seccion_idSeccion` ASC) ,
  INDEX `fk_Plan_Estudio_has_Seccion_Plan_Estudio1_idx` (`Plan_Estudio_idPlan_Estudio` ASC) ,
  INDEX `Profesor_Guia_idx` (`Profesor_Guia` ASC) ,
  INDEX `Salon_idx` (`Salon` ASC) ,
  CONSTRAINT `fk_Plan_Estudio_has_Seccion_Plan_Estudio1`
    FOREIGN KEY (`Plan_Estudio_idPlan_Estudio`)
    REFERENCES `Batalla_de_Niquitao`.`Plan_Estudio` (`idPlan_Estudio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Plan_Estudio_has_Seccion_Seccion1`
    FOREIGN KEY (`Seccion_idSeccion`)
    REFERENCES `Batalla_de_Niquitao`.`Seccion` (`idSeccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Profesor_Guia`
    FOREIGN KEY (`Profesor_Guia`)
    REFERENCES `Batalla_de_Niquitao`.`Profesor` (`Cedula_P`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Salon`
    FOREIGN KEY (`Salon`)
    REFERENCES `Batalla_de_Niquitao`.`Salon` (`idSalon`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Batalla_de_Niquitao`.`Estudiante_has_Representante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Batalla_de_Niquitao`.`Estudiante_has_Representante` (
  `idEstudiante` BIGINT(0) UNSIGNED NOT NULL,
  `idRepresentante` BIGINT(0) UNSIGNED NOT NULL,
  `Observacion` VARBINARY(256) NULL,
  PRIMARY KEY (`idEstudiante`, `idRepresentante`),
  INDEX `id_representante_idx` (`idRepresentante` ASC) ,
  CONSTRAINT `id_estudiante`
    FOREIGN KEY (`idEstudiante`)
    REFERENCES `Batalla_de_Niquitao`.`Estudiante_II` (`Cedula_EII`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_representante`
    FOREIGN KEY (`idRepresentante`)
    REFERENCES `Batalla_de_Niquitao`.`Representante_I` (`Cedula_RI`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Batalla_de_Niquitao` ;

-- -----------------------------------------------------
-- procedure sp_insertar_estudiante_2
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_estudiante_2` (
    IN cedula BIGINT, 
    IN nombres VARCHAR(256), 
	IN apellidos VARCHAR(256), 
	IN fecha_nacimiento DATE,
    IN sexo VARCHAR(256),
    IN matricula BIGINT,
    IN representante BIGINT,
    IN seccion BIGINT
)
BEGIN

	START TRANSACTION;

	INSERT INTO Estudiante_II(Cedula_EII, Nombres_EII, Apellidos_EII, Matricula_EII, FechaN_EII, Sexo_EII, Seccion_EII) 
	VALUES(cedula, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(nombres,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(apellidos,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), matricula, fecha_nacimiento, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(sexo,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), seccion);
    
    INSERT INTO Estudiante_has_Representante(idEstudiante, idRepresentante)
    VALUES (cedula,representante);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_profesor
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_profesor` (
	-- profesor
    IN p_cedula BIGINT, 
    IN p_nombres VARCHAR(256), 
	IN p_apellidos VARCHAR(256), 
    IN p_materia BIGINT,
    IN p_fecha DATE,
	IN p_sexo VARCHAR(256),
	IN p_titulo VARCHAR(256),
	IN p_contrato BIGINT,
    -- Correos
    IN correo1 VARCHAR(256),
    IN correo2 VARCHAR(256),
    OUT idcorreos BIGINT,
    -- Telefonos
    IN telefono1 VARCHAR(256),
    IN telefono2 VARCHAR(256),
    OUT idtelefonos BIGINT,
    -- Direccion
	IN casa VARCHAR (256),
	IN calle VARCHAR (256),
	IN vereda VARCHAR (256),
	IN piso VARCHAR (256),
	IN edificio VARCHAR (256),
	IN punto_referencia VARCHAR (256),
	IN parroquia BIGINT,
	OUT iddireccion BIGINT
)
BEGIN

	DECLARE telefonos BIGINT;
    DECLARE correos BIGINT;
    DECLARE direccion BIGINT;
    
    CALL sp_insertar_telefonos(telefono1,telefono2,idtelefonos);
    SET telefonos = idtelefonos;
    CALL sp_insertar_correos(correo1,correo2,idcorreos);
    SET correos = idcorreos;
    CALL sp_insertar_direccion(casa,calle,vereda,piso,edificio,punto_referencia,parroquia,iddireccion);
    SET direccion = iddireccion;

	START TRANSACTION;

	INSERT INTO Profesor(Cedula_P, Nombres_P, Apellidos_P, Telefonos_P, Correos_P, Direccion_P, FechaN_P, Sexo_P, Titulo_U_P, Contrato_P) 
	VALUES(p_cedula, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(p_nombres,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(p_apellidos,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), telefonos, correos, direccion, p_fecha, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(p_sexo,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(p_titulo,'Mirai-Aberu.'), 'Kaori-Aberu.'),'Sydney-Blackwood.'),p_contrato);
    
    INSERT INTO Profesor_has_Materia (Cedula_P_id, Materia_id)
    VALUES (p_cedula,p_materia);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_seccion
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_seccion` (
	-- Seccion
	IN seccion VARCHAR(1)
)
BEGIN
	START TRANSACTION;

	INSERT INTO Seccion(Seccion) 
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(seccion,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_materia
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_materia` (
	-- Materia
	IN materia VARCHAR(256), 
    IN hora_i TIME,
    IN hora_f TIME,
    
    -- Plan de Estudio
    IN plan_estudio BIGINT
)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Materia(Materia_M, HoraI_M, HoraF_M, Plan_Estudio_M)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(materia,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), hora_i, hora_f, plan_estudio);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_plan_estudio
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_plan_estudio` (
	-- Plan de Estudio
	IN nombre VARCHAR(256), 
    IN tipo VARCHAR(256),
    IN observacion VARCHAR(256)
)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Plan_Estudio(Nombre_PE, Tipo_PE, Observacion_PE, Colegio_PE)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(nombre,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(tipo,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(observacion,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_estado
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_estado` (
    IN estado BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM Estado WHERE idEstado = estado;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_mensualidad
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_mensualidad` (
	-- Mensualidad
	IN Mes_RI VARCHAR(256), 
    IN VigenciaI_RI DATE,
    IN VigenciaF_RI DATE
)
BEGIN
	START TRANSACTION;
	INSERT INTO Mensualidad_RI(Mes_RI, VigenciaI_RI, VigenciaF_RI) 
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(Mes_RI,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), VigenciaI_RI, VigenciaF_RI);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_salon
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_salon` (
	-- Salon
	IN salon VARCHAR(256)

)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Salon(Salon)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(salon,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_municipio
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_municipio` (
	-- Municipio
	IN municipio VARCHAR(256),
    IN estado BIGINT

)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Municipio(Municipio, Estado)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(municipio,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),estado);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_ciudad
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_ciudad` (
	-- Ciudad
	IN ciudad VARCHAR(256),
    IN codigo VARCHAR(256),
    IN municipio BIGINT

)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Ciudad(Ciudad, Codigo_P, Municipio)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(ciudad,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(codigo,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),municipio);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_parroquia
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_parroquia` (
	-- Parroquia
	IN parroquia VARCHAR(256),
    IN ciudad BIGINT

)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Parroquia(Parroquia, Ciudad)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(parroquia,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),ciudad);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_usuario
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_usuario` (
	-- Usuario
	IN usuario BIGINT,
    IN pregunta1 VARCHAR(256),
    IN pregunta2 VARCHAR(256),
    IN respuesta1 VARCHAR(256),
    IN respuesta2 VARCHAR(256),
    IN correo VARCHAR(256),
    IN tipo VARCHAR(256),
    IN nombre VARCHAR(256),
    IN apellido VARCHAR(256),
    IN clave VARCHAR(256),
    IN telefono VARCHAR(256)

)
BEGIN

	START TRANSACTION;
    
    INSERT INTO Administrativo(idAdministrativo, Nombres_A, Apellidos_A)
    VALUES(usuario, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(nombre,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(apellido,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
    INSERT INTO Recuperacion (idRecuperacion,Pregunta1,Pregunta2,Respuesta1,Respuesta2,CorreoR,TelefonoR)
    VALUE (usuario, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(pregunta1,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(pregunta2,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(respuesta1,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(respuesta2,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(correo,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(telefono,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));

    INSERT INTO Usuario(idUsuario, Clave_U, Tipo_Usuario_idTipo_Usuario, Recuperacion_idRecuperacion,Administrativo_idAdministrativo)
	VALUES(usuario, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(clave,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),tipo,usuario,usuario);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_consultar_usuario
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_consultar_usuario` (
	-- Usuario
	IN usuario BIGINT,
    IN clave VARCHAR(256),
    OUT respuesta VARCHAR(16)

)
BEGIN
	DECLARE pword VARCHAR(256);
    
    SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Clave_U, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO pword FROM Usuario WHERE idUsuario=usuario;
    
    IF clave = pword THEN
    SET respuesta = 1;
    ELSE
    SET respuesta = 0;
    END IF;
    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_municipio
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_municipio` (
    IN municipio BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM Municipio WHERE idMunicipio = municipio;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_ciudad
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_ciudad` (
    IN ciudad BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM ciudad WHERE idCiudad= ciudad;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_parroquia
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_parroquia` (
    IN parroquia BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM parroquia WHERE idParroquia= parroquia;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_plan_de_studio
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_plan_de_studio` (
    IN plan_de_studio BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM Plan_Estudio WHERE idPlan_Estudio= plan_estudio;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_materias
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_materias` (
    IN materias BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM materias WHERE idMaterias= materias;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_seccion
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_seccion` (
    IN seccion BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM seccion WHERE idSeccion= seccion;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_salon
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_salon` (
    IN salon BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM Salon WHERE idSalon= salon;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_telefonos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_telefonos` (
    -- Telefonos
    IN telefono1 VARCHAR(256),
    IN telefono2 VARCHAR(256),
    OUT idtelefonos BIGINT
)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Telefonos(Telefono, Telefono2)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(telefono1,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(telefono2,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
    SET idtelefonos = last_insert_id();
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_correos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_correos` (
    -- Correos
    IN correo1 VARCHAR(256),
    IN correo2 VARCHAR(256),
    OUT idcorreos BIGINT
)
BEGIN
    
	START TRANSACTION;
    
    INSERT INTO Correos(Correo, Correo2)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(correo1,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(correo2,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
    SET idcorreos = last_insert_id();
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_direccion
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_direccion` (
    -- Direccion
    IN casa VARCHAR(256),
    IN calle VARCHAR(256),
    IN vereda VARCHAR(256),
    IN piso VARCHAR(256),
    IN edificio VARCHAR(256),
    IN punto_referencia VARCHAR(256),
    IN parroquia BIGINT,
    OUT iddireccion BIGINT
)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Direccion(Casa, Calle, Vereda, Piso, Edificio, Punto_R, Parroquia)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(casa,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(calle,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(vereda,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(piso,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(edificio,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(punto_referencia,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), parroquia);
    
    SET iddireccion = last_insert_id();
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_nota2
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_nota2` (
	-- nota
    IN materia BIGINT,
    IN estudiante BIGINT,
	IN nota FLOAT,
    IN fecha DATE,
    IN lapso BIGINT,
    IN observacion VARCHAR (256)
)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Materia_has_Notas (Materia_idMateria, Lapso_idLapso, Nota, Fecha_carga, Observacion, Estudiante_MN)
    VALUES(materia, lapso, nota, fecha, observacion, estudiante);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_contrato
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_contrato` (
	-- Contrato
	IN vigenciai DATE,
    IN vigenciaf DATE

)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Contrato(VigenciaI_C, VigenciaF_C)
	VALUES(vigenciai, vigenciaf);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_representante
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_representante` (
-- Represetante
IN cedula BIGINT,
IN nombres VARCHAR (256),
IN apellidos VARCHAR (256),
IN fecha_nacimiento DATE,
IN sexo VARCHAR (256),
IN tipo VARCHAR (256),
-- Correos
IN correo1 VARCHAR (256),
IN correo2 VARCHAR (256),
OUT idcorreos BIGINT,
-- Telefonos
IN telefono1 VARCHAR (256),
IN telefono2 VARCHAR (256),
OUT idtelefonos BIGINT,
-- Direccion
IN casa VARCHAR (256),
IN calle VARCHAR (256),
IN vereda VARCHAR (256),
IN piso VARCHAR (256),
IN edificio VARCHAR (256),
IN punto_referencia VARCHAR (256),
IN parroquia BIGINT,
OUT iddireccion BIGINT
)
BEGIN

	DECLARE telefonos BIGINT;
    DECLARE correos BIGINT;
    DECLARE direccion BIGINT;
    
    CALL sp_insertar_telefonos(telefono1,telefono2,idtelefonos);
    SET telefonos = idtelefonos;
    CALL sp_insertar_correos(correo1,correo2,idcorreos);
    SET correos = idcorreos;
    CALL sp_insertar_direccion(casa,calle,vereda,piso,edificio,punto_referencia,parroquia,iddireccion);
    SET direccion = iddireccion;

	START TRANSACTION;

	INSERT INTO Representante_I(Cedula_RI, Nombres_RI, Apellidos_RI, Telefono_RI, Correo_RI, Direccion_RI, FechaN_RI, Sexo_RI, Tipo_RI) 
	VALUES(cedula, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(nombres,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(apellidos,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), telefonos, correos, direccion, fecha_nacimiento, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(sexo,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(tipo,'Mirai-Aberu.'), 'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_estado
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_estado` (
	-- Estado
	IN estado VARCHAR(256)

)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Estado(Estado)
	VALUES(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(estado,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_matricula
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_matricula` (
	-- Mensualidad
	IN Ano BIGINT, 
    IN Observacion VARCHAR(256),
    IN Plan BIGINT
)
BEGIN
	START TRANSACTION;
	INSERT INTO Matricula(idMatricula, Observacion, Plan_M) 
	VALUES(Ano, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(Observacion,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Plan);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure buscar_representante
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `buscar_representante` (

in cedula BIGINT, out nombre VARCHAR(256), out apellido VARCHAR(256), out fecha DATE,
out telefono1 VARCHAR(256), out telefono2 VARCHAR(256),
out correo1 VARCHAR(256), out correo2 VARCHAR(256),
out sexo VARCHAR(1), out tipo VARCHAR (256),
out casa VARCHAR (256), out calle VARCHAR (256), out vereda VARCHAR (256), out piso VARCHAR (256), out edificio VARCHAR (256), out puntor VARCHAR (256),
out parroquia VARCHAR (256),
out ciudad VARCHAR (256), out codigop VARCHAR (256),
out municipio VARCHAR (256),
out estado VARCHAR (256)
)
BEGIN

DECLARE nombres VARCHAR(256); DECLARE apellidos VARCHAR(256); DECLARE fechas DATE;
DECLARE telefonos1 VARCHAR(256); DECLARE telefonos2 VARCHAR(256);
DECLARE correos1 VARCHAR(256); DECLARE correos2 VARCHAR(256);
DECLARE sexos VARCHAR(1); DECLARE tipos VARCHAR(256);
DECLARE casas VARCHAR(256); DECLARE calles VARCHAR(256); DECLARE veredas VARCHAR(256); DECLARE pisos VARCHAR(256); DECLARE edificios VARCHAR(256); DECLARE puntosr VARCHAR(256);
DECLARE parroquias VARCHAR(256);
DECLARE ciudades VARCHAR(256); DECLARE codigosp VARCHAR(256);
DECLARE municipios VARCHAR(256);
DECLARE estados VARCHAR(256);
DECLARE idtelefono BIGINT; DECLARE idcorreo BIGINT; DECLARE iddireccion BIGINT;

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_RI, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO nombres FROM Representante_I WHERE Cedula_RI=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_RI, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO apellidos FROM Representante_I WHERE Cedula_RI=cedula;
SELECT FechaN_RI INTO fechas FROM Representante_I WHERE Cedula_RI=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Sexo_RI, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO sexos FROM Representante_I WHERE Cedula_RI=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Tipo_RI, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO tipos FROM Representante_I WHERE Cedula_RI=cedula;

SELECT Telefono_RI INTO idtelefono FROM Representante_I WHERE Cedula_RI=cedula;
SELECT Correo_RI INTO idcorreo FROM Representante_I WHERE Cedula_RI=cedula;
SELECT Direccion_RI INTO iddireccion FROM Representante_I WHERE Cedula_RI=cedula;

CALL buscar_telefonos (idtelefono, telefonos1, telefonos2);
CALL buscar_correos (idcorreo, correos1, correos2);
CALL buscar_direccion (iddireccion, casas, calles, veredas, pisos, edificios, puntosr, parroquias, ciudades, codigosp, municipios, estados);

SET nombre = nombres;SET apellido = apellidos;SET fecha = fechas;SET sexo = sexos;SET tipo = tipos;
SET telefono1 = telefonos1;SET telefono2 = telefonos2;
SET correo1 = correos1;SET correo2 = correos2;
SET casa = casas;SET calle = calles;SET vereda = veredas;SET piso = pisos;SET edificio = edificios;SET puntor = puntosr;
SET parroquia = parroquias;
SET ciudad = ciudades;SET codigop = codigosp;
SET municipio = municipios;
SET estado = estados;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure buscar_telefonos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `buscar_telefonos` (

in id BIGINT,

out telefono1 varchar(256), out telefono2 varchar(256)

)
BEGIN
DECLARE telefonos1 varchar (256); DECLARE telefonos2 varchar (256);

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO telefonos1 FROM Telefonos WHERE idTelefonos=id;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono2, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO telefonos2 FROM Telefonos WHERE idTelefonos=id;

SET telefono1 = telefonos1;
SET telefono2 = telefonos2;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure buscar_correos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `buscar_correos` (

in id BIGINT,

out correo1 varchar(256), out correo2 varchar(256)

)
BEGIN
DECLARE correos1 varchar (256); DECLARE correos2 varchar (256);

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Correo, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO correos1 FROM Correos WHERE idCorreos=id;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Correo2, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO correos2 FROM Correos WHERE idCorreos=id;

SET correo1 = correos1;
SET correo2 = correos2;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure buscar_direccion
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `buscar_direccion` (

in id BIGINT,

out casa2 varchar(256), out calle2 varchar(256), out vereda2 varchar(256), out piso2 varchar(256), out edificio2 varchar(256), out puntor varchar(256),
out parroquia2 varchar(256),
out ciudad2 varchar(256), out codigop2 varchar(256),
out municipio2 varchar(256),
out estado2 varchar(256)

)
BEGIN
DECLARE parroquiaid bigint; DECLARE ciudadid bigint; DECLARE municipioid bigint; DECLARE estadoid bigint;

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Casa, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO casa2 FROM Direccion WHERE idDireccion=id;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Calle, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO calle2 FROM Direccion WHERE idDireccion=id;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Vereda, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO vereda2 FROM Direccion WHERE idDireccion=id;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Piso, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO piso2 FROM Direccion WHERE idDireccion=id;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Edificio, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO edificio2 FROM Direccion WHERE idDireccion=id;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Punto_R, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO puntor FROM Direccion WHERE idDireccion=id;

SELECT Parroquia INTO parroquiaid FROM Direccion WHERE idDireccion=id;

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Parroquia, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO parroquia2 FROM Parroquia WHERE idParroquia=parroquiaid;

SELECT Ciudad INTO ciudadid FROM Parroquia WHERE idParroquia=parroquiaid;

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Ciudad, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO ciudad2 FROM Ciudad WHERE idCiudad=ciudadid;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Codigo_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO codigop2 FROM Ciudad WHERE idCiudad=ciudadid;

SELECT Municipio INTO municipioid FROM Ciudad WHERE idCiudad=ciudadid;

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Municipio, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO municipio2 FROM Municipio WHERE idMunicipio=municipioid;


SELECT Estado INTO estadoid FROM Municipio WHERE idMunicipio=municipioid;

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Estado, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO estado2 FROM Estado WHERE idEstado=estadoid;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure buscar_profesor
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `buscar_profesor` (

in cedula BIGINT, out nombre VARCHAR(256), out apellido VARCHAR(256), out fecha DATE,
out telefono1 VARCHAR(256), out telefono2 VARCHAR(256),
out correo1 VARCHAR(256), out correo2 VARCHAR(256),
out sexo VARCHAR(1), out titulo VARCHAR (256),
out casa VARCHAR (256), out calle VARCHAR (256), out vereda VARCHAR (256), out piso VARCHAR (256), out edificio VARCHAR (256), out puntor VARCHAR (256),
out parroquia VARCHAR (256),
out ciudad VARCHAR (256), out codigop VARCHAR (256),
out municipio VARCHAR (256),
out estado VARCHAR (256),
out vigenciai date, out vigenciaf date,
out materia varchar (256), out horai time, out horaf time
)
BEGIN

DECLARE nombres VARCHAR(256); DECLARE apellidos VARCHAR(256); DECLARE fechas DATE;
DECLARE telefonos1 VARCHAR(256); DECLARE telefonos2 VARCHAR(256);
DECLARE correos1 VARCHAR(256); DECLARE correos2 VARCHAR(256);
DECLARE sexos VARCHAR(1); DECLARE titulos VARCHAR(256);
DECLARE casas VARCHAR(256); DECLARE calles VARCHAR(256); DECLARE veredas VARCHAR(256); DECLARE pisos VARCHAR(256); DECLARE edificios VARCHAR(256); DECLARE puntosr VARCHAR(256);
DECLARE parroquias VARCHAR(256);
DECLARE ciudades VARCHAR(256); DECLARE codigosp VARCHAR(256);
DECLARE municipios VARCHAR(256);
DECLARE estados VARCHAR(256);
DECLARE idtelefono BIGINT; DECLARE idcorreo BIGINT; DECLARE iddireccion BIGINT; declare idmateria bigint; declare idcontrato bigint;
DECLARE materias varchar(256); declare horasi time; declare horasf time;
declare vigenciasi date; declare vigenciasf date;

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO nombres FROM Profesor WHERE Cedula_P=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO apellidos FROM Profesor WHERE Cedula_P=cedula;
SELECT FechaN_P INTO fechas FROM Profesor WHERE Cedula_P=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Sexo_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO sexos FROM Profesor WHERE Cedula_P=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Tipo_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO titulos FROM Profesor WHERE Cedula_P=cedula;

SELECT Contrato_P INTO idcontrato FROM Profesor WHERE Cedula_P=cedula;
SELECT VigenciaI_C INTO vigenciasi FROM Contrato WHERE idContrato=idcontrato;
SELECT VigenciaF_C INTO vigenciasf FROM Contrato WHERE idContrato=idcontrato;

SELECT Materia_P INTO idmateria FROM Profesor WHERE Cedula_P=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Materia_M, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO materias FROM Materia WHERE idMateria=idmateria;
SELECT HoraI_M INTO horasi FROM Materia WHERE idMateria=idmateria;
SELECT HoraF_M INTO horasf FROM Materia WHERE idMateria=idmateria;

SELECT Telefono_P INTO idtelefono FROM Profesor WHERE Cedula_P=cedula;
SELECT Correo_P INTO idcorreo FROM Profesor WHERE Cedula_P=cedula;
SELECT Direccion_P INTO iddireccion FROM Profesor WHERE Cedula_P=cedula;

CALL buscar_telefonos (idtelefono, telefonos1, telefonos2);
CALL buscar_correos (idcorreo, correos1, correos2);
CALL buscar_direccion (iddireccion, casas, calles, veredas, pisos, edificios, puntosr, parroquias, ciudades, codigosp, municipios, estados);

SET nombre = nombres;SET apellido = apellidos;SET fecha = fechas;SET sexo = sexos;SET titulo = titulos;
SET telefono1 = telefonos1;SET telefono2 = telefonos2;
SET correo1 = correos1;SET correo2 = correos2;
SET casa = casas;SET calle = calles;SET vereda = veredas;SET piso = pisos;SET edificio = edificios;SET puntor = puntosr;
SET parroquia = parroquias;
SET ciudad = ciudades;SET codigop = codigosp;
SET municipio = municipios;
SET estado = estados;
SET materia = materias; SET horai = horasi; SET horaf = horasf;
SET vigenciai = vigenciasi; SET vigenciaf = vigenciasf;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure buscar_estudiante_2
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `buscar_estudiante_2` (

in cedula BIGINT, out nombre VARCHAR(256), out apellido VARCHAR(256), out fecha DATE, out sexo VARCHAR(1), 
out cedular BIGINT, out nombrer VARCHAR (256), out apellidor VARCHAR (256), out telefonor VARCHAR (256), out correor VARCHAR (256),
out matricula BIGINT, out plan varchar (256)
)
BEGIN

DECLARE idplan BIGINT; DECLARE idtelefono BIGINT; DECLARE idcorreo BIGINT; DECLARE telefono2 varchar (256); declare correo2 varchar (256);

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO nombre FROM Estudiante_II WHERE Cedula_EII=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO apellido FROM Estudiante_II WHERE Cedula_EII=cedula;
SELECT FechaN_EII INTO fecha FROM Estudiante_II WHERE Cedula_EII=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Sexo_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO sexo FROM Estudiante_II WHERE Cedula_EII=cedula;

SELECT Matricula_EII INTO matricula FROM Estudiante_II WHERE Cedula_EII=cedula;

SELECT Representante_EII INTO cedular FROM Estudiante_II WHERE Cedula_EII=cedula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_RI, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO nombrer FROM Representante_I WHERE Cedula_RI=cedular;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_RI, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO apellidor FROM Representante_I WHERE Cedula_RI=cedular;
SELECT Telefono_RI INTO idtelefono FROM Representante_I WHERE Cedula_RI=cedular;
SELECT Correo_RI INTO idcorreo FROM Representante_I WHERE Cedula_RI=cedular;

SELECT PLan_M INTO idplan FROM Matricula WHERE idMatricula=matricula;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO plan FROM Plan_Estudio WHERE idPLan_Estudio=idplan;

CALL buscar_telefonos (idtelefono, telefonor, telefono2);
CALL buscar_correos (idcorreo, correor, correo2);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_mision_vision
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_mision_vision` (
	-- Mision y Vision
    IN mision VARCHAR(1024),
    IN vision VARCHAR(1024),
	OUT activo bigint
)
BEGIN
	START TRANSACTION;
    
    INSERT INTO M_and_V(idM_and_V, Mision, Vision)
	VALUES(0, mision, vision);
    
    SET activo = 1;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure buscar_nota2
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `buscar_nota2` (

in estudiante BIGINT, in clase BIGINT,

out nota FLOAT, out materia varchar(256)

)
BEGIN
DECLARE notas FLOAT; DECLARE materias varchar (256);

SELECT Nota_N INTO notas FROM Notas WHERE Estudiante_N=estudiante;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Materia_M, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO materias FROM Materia WHERE idMateria=clase;

SET nota = notas;
SET materia = materias;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_tipo
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_tipo` (
	-- Tipo
	IN tipo VARCHAR(256),
    IN id BIGINT

)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Tipo_Usuario(idTipo_Usuario, Tipo_T)
	VALUES(id, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(tipo,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure buscar_mision_vision
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `buscar_mision_vision` (

in id BIGINT,

out mision2 varchar(1024), out vision2 varchar(1024)

)
BEGIN

SELECT Mision INTO mision2 FROM M_and_V WHERE idM_and_V=id;
SELECT Vision INTO vision2 FROM M_and_V WHERE idM_and_V=id;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_actualizar_direccion
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_actualizar_direccion` (
    -- Direccion
    IN casa VARCHAR(256),
    IN calle VARCHAR(256),
    IN vereda VARCHAR(256),
    IN piso VARCHAR(256),
    IN edificio VARCHAR(256),
    IN punto_referencia VARCHAR(256),
    IN parroquia BIGINT,
    IN iddireccion BIGINT
)
BEGIN
	START TRANSACTION;
    
    UPDATE Direccion SET Casa = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(casa,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Calle = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(calle,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Vereda = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(vereda,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Piso = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(piso,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Edificio = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(edificio,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Punto_R = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(punto_referencia,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Parroquia = parroquia WHERE idDireccion = iddireccion;
    
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_actualizar_telefonos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_actualizar_telefonos` (
    -- Telefonos
    IN telefono1 VARCHAR(256),
    IN telefono2 VARCHAR(256),
    IN idtelefonos BIGINT
)
BEGIN
	START TRANSACTION;
    
    UPDATE Telefonos SET Telefono = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(telefono1,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Telefono2 = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(telefono2,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.') WHERE idTelefonos = idtelefonos;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_actualizar_correos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_actualizar_correos` (
    -- Correos
    IN correo1 VARCHAR(256),
    IN correo2 VARCHAR(256),
    IN idcorreos BIGINT
)
BEGIN
    
	START TRANSACTION;
    
   UPDATE Correos SET Correo = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(correo1,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Correo2 = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(correo2,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.') WHERE idCorreos = idcorreos;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_actualizar_representante
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_actualizar_representante` (
-- Represetante
IN cedula BIGINT,
IN nombres VARCHAR (256),
IN apellidos VARCHAR (256),
IN fecha_nacimiento DATE,
IN sexo VARCHAR (256),
IN tipo VARCHAR (256),
-- Correos
IN correo1 VARCHAR (256),
IN correo2 VARCHAR (256),
OUT idcorreos BIGINT,
-- Telefonos
IN telefono1 VARCHAR (256),
IN telefono2 VARCHAR (256),
OUT idtelefonos BIGINT,
-- Direccion
IN casa VARCHAR (256),
IN calle VARCHAR (256),
IN vereda VARCHAR (256),
IN piso VARCHAR (256),
IN edificio VARCHAR (256),
IN punto_referencia VARCHAR (256),
IN parroquia BIGINT,
OUT iddireccion BIGINT
)
BEGIN

	DECLARE telefonos BIGINT;
    DECLARE correos BIGINT;
    DECLARE direccion BIGINT;
    
    SELECT Telefono_RI INTO telefonos FROM Representante_I WHERE Cedula_RI = cedula;
    SELECT Correo_RI INTO correos FROM Representante_I WHERE Cedula_RI = cedula;
    SELECT Direccion_RI INTO direccion FROM Representante_I WHERE Cedula_RI = cedula;
    
    CALL sp_insertar_telefonos(telefono1,telefono2,telefonos);
    CALL sp_insertar_correos(correo1,correo2,correos);
    CALL sp_insertar_direccion(casa,calle,vereda,piso,edificio,punto_referencia,parroquia,direccion);

	START TRANSACTION;

	UPDATE Representante_I SET Nombres_RI = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(nombres,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Apellidos_RI = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(apellidos,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Telefono_RI = telefonos, Correo_RI = correos, Direccion_RI = direccion, FechaN_RI = fecha_nacimiento, Sexo_RI = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(sexo,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), Tipo_RI = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(tipo,'Mirai-Aberu.'), 'Kaori-Aberu.'),'Sydney-Blackwood.') 
	WHERE Cedula_RI = cedula;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_representante
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_representante` (
    IN cedula BIGINT
)
BEGIN

	declare telefono bigint; declare correo bigint; declare direccion bigint;

	START TRANSACTION;
    
    select Telefono_RI into telefono from Representante_I where Cedula_RI = cedula;
    select Correo_RI into correo from Representante_I where Cedula_RI = cedula;
    select Direccion_RI into direccion from Representante_I where Cedula_RI = cedula;
    
    DELETE FROM Representante_I WHERE Cedula_RI= cedula;
    DELETE FROM Telefonos WHERE idTelefonos = telefono;
    DELETE FROM Correos WHERE idCorreos = correo;
    DELETE FROM Direccion WHERE idDireccion = direccion;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure recuperar_password
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `recuperar_password` (

IN usuario bigint,
IN res1 varchar (256),
IN res2 varchar (256),
OUT resultado INT

)
BEGIN

declare auth1 int; declare auth2 int; declare auth3 int; declare resa varchar (256); declare resb varchar (256);

    SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Respuesta1, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO resa FROM Recuperacion WHERE idRecuperacion=usuario;
    SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Respuesta2, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO resb FROM Recuperacion WHERE idRecuperacion=usuario;
    
IF res1 = resa THEN
    SET auth1 = 1;
    ELSE
    SET auth1 = 0;
    END IF;

IF res2 = resb THEN
    SET auth2 = 1;
    ELSE
    SET auth2 = 0;
    END IF;

SET auth3 = auth1 + auth2;

IF auth3 = 2 THEN
    SET resultado = 1;
    ELSE
    SET resultado = 0;
    END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos` ()
BEGIN
call datos_colegio();
call datos_tipos();
call datos_planes();
call datos_lapsos();
call datos_materias();
call datos_mision_and_vision();
call datos_parroquias();
call datos_secciones();
call datos_su();
call datos_literales();

/* Experimental */

call datos_salones();
call datos_contratos();
call datos_correos();
call datos_telefonos();
call datos_direcciones();
call datos_mensualidad();
call datos_matricula();
call datos_profesor();
call datos_representante();
call datos_estudiante();


END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_estudiante
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_estudiante` (
    IN cedula BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM Estudiante_II WHERE Cedula_EII= cedula;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_mensualidad
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_mensualidad` (
    IN id BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM Mensualidad_RI WHERE idMensualidad_RI= id;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_profesor
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_profesor` (
    IN cedula BIGINT
)
BEGIN

	declare telefono bigint; declare correo bigint; declare direccion bigint;

	START TRANSACTION;
    
    select Telefonos_P into telefono from Profesor where Cedula_P = cedula;
    select Correos_P into correo from Profesor where Cedula_P = cedula;
    select Direccion_P into direccion from Profesor where Cedula_P = cedula;
    
    DELETE FROM Profesor WHERE Cedula_P = cedula;
    DELETE FROM Telefonos WHERE idTelefonos = telefono;
    DELETE FROM Correos WHERE idCorreos = correo;
    DELETE FROM Direccion WHERE idDireccion = direccion;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_contrato
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_contrato` (
    IN id BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM Contrato WHERE idContrato= id;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_planes
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_planes` (
    IN id BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM Plan_Estudio WHERE idPlan_Estudio = id;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_eliminar_matricula
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_eliminar_matricula` (
    IN id BIGINT
)
BEGIN
	START TRANSACTION;
    
    DELETE FROM Matricula WHERE idMatricula = id;
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_materia
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_materia` ()
BEGIN
  SELECT idMateria, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Materia_M, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') 
  FROM Materia WHERE idMateria >= 10 ORDER BY idMateria;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_parroquia
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_parroquia` ()
BEGIN
SELECT idParroquia, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Parroquia, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Parroquia ORDER BY idParroquia;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_plan
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_plan` ()
BEGIN
SELECT idPlan_Estudio, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Plan_Estudio ORDER BY idPlan_Estudio;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_municipio
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_municipio` ()
BEGIN
SELECT idMunicipio, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Municipio, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Municipio ORDER BY idMunicipio;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_estado
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_estado` ()
BEGIN
SELECT idEstado, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Estado, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Estado ORDER BY idEstado;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_ciudad
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_ciudad` ()
BEGIN
SELECT idCiudad, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Ciudad, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Ciudad ORDER BY idCiudad;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_profesor
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_profesor` ()
BEGIN
SELECT Cedula_P, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.'), AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Profesor ORDER BY Cedula_P;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_salon
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_salon` ()
BEGIN
SELECT idSalon, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Salon, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Salon ORDER BY idSalon;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_seccion
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_seccion` ()
BEGIN
SELECT idSeccion, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Seccion, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Seccion ORDER BY idSeccion;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_nombre_usuario
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_nombre_usuario` (
in usuarioRecuperado varchar(256),
out usuarioRecuperado2 varchar(256)
)
BEGIN
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_A, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO usuarioRecuperado2 FROM Administrativo WHERE idAdministrativo = usuarioRecuperado;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_tipo_usuario
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_tipo_usuario` (
in tipoRecuperado varchar(256),
out tipoRecuperado2 varchar(256)
)
BEGIN
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Tipo_T, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') INTO tipoRecuperado2 FROM Tipo_Usuario WHERE idTipo_Usuario = tipoRecuperado;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_reporte_profesor
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_reporte_profesor` ()
BEGIN

SELECT Cedula_P, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.'),  AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.'), AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.'), AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Correo, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.'), AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Materia_M, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Profesor_has_Materia

INNER JOIN Profesor ON profesor.Cedula_P = profesor_has_materia.Cedula_P_id
INNER JOIN Materia ON Materia.idMateria = profesor_has_materia.Materia_id
INNER JOIN Telefonos ON Telefonos.idTelefonos = Profesor.Telefonos_P
INNER JOIN Correos ON Correos.idCorreos = Profesor.Correos_P;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_reporte_record
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_reporte_record` (IN id BIGINT, IN plan BIGINT)
BEGIN

SELECT Nota, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Materia_M, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Materias, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_L, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Lapsos, 
Cedula_EII,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombres, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellidos,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Seccion, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Seccion,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Planes,
Profesor_Guia,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombre_Profesor,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellido_Profesor
FROM Materia_has_Notas

INNER JOIN Materia ON Materia.idMateria = Materia_has_Notas.Materia_idMateria
INNER JOIN Lapso ON Lapso.idLapso = Materia_has_Notas.Lapso_idLapso
INNER JOIN Estudiante_II ON Estudiante_II.Cedula_EII = Materia_has_Notas.Estudiante_MN
INNER JOIN Matricula ON Matricula.idMatricula = Estudiante_II.Matricula_EII
INNER JOIN Plan_Estudio ON Plan_Estudio.idPlan_Estudio = Matricula.Plan_M
INNER JOIN Plan_Estudio_has_Seccion ON Plan_Estudio_has_Seccion.Plan_Estudio_idPlan_Estudio = Plan_Estudio.idPlan_Estudio
INNER JOIN Profesor ON Profesor.Cedula_P = Plan_Estudio_has_Seccion.Profesor_Guia
INNER JOIN Seccion ON Seccion.idSeccion = Plan_Estudio_has_Seccion.Seccion_idSeccion

WHERE Estudiante_MN = id AND Plan_Estudio_M = plan

GROUP BY Materias, Lapsos, Nota;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_reporte_usuario
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_reporte_usuario` ()
BEGIN

SELECT idUsuario, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_A, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.'),  AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_A, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.'), AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Tipo_T, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Usuario 
INNER JOIN Administrativo ON Administrativo.idAdministrativo = Usuario.Administrativo_idAdministrativo
INNER JOIN Tipo_Usuario ON Tipo_Usuario.idTipo_Usuario = Usuario.Tipo_Usuario_idTipo_Usuario;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_reporte_estudiante
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_reporte_estudiante` (IN id BIGINT, IN secciones BIGINT)
BEGIN

SELECT Cedula_EII, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombre, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellido, 
Matricula_EII,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Seccion, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Seccion,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Plan,
Cedula_RI, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Telefono,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Correo, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Correo

FROM Plan_Estudio

INNER JOIN Matricula ON Matricula.Plan_M = Plan_Estudio.idPlan_Estudio
INNER JOIN Estudiante_II ON Estudiante_II.Matricula_EII = Matricula.idMatricula
INNER JOIN Seccion ON Seccion.idSeccion = Estudiante_II.Seccion_EII
INNER JOIN estudiante_has_representante ON estudiante_has_representante.idEstudiante = Estudiante_II.Cedula_EII
INNER JOIN representante_i ON representante_i.Cedula_RI = estudiante_has_representante.idRepresentante
INNER JOIN Telefonos ON Telefonos.idTelefonos = Representante_I.Telefono_RI
INNER JOIN Correos ON Correos.idCorreos = Representante_I.Correo_RI

WHERE idPlan_Estudio = id AND Seccion_EII = secciones;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure seleccionar_plan
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `seleccionar_plan` (IN id BIGINT)
BEGIN

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Plan_Estudio WHERE idPlan_Estudio = id;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_reporte_informacion_record
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_reporte_informacion_record` (IN id BIGINT)
BEGIN

DECLARE matricula2 BIGINT; declare plan2 bigint;

SELECT Cedula_EII, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombres, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellidos, Seccion_EII FROM Estudiante_II WHERE Cedula_EII = id;
SELECT Matricula_EII INTO matricula2 FROM Estudiante_II WHERE Cedula_EII = id;
SELECT Plan_M INTO plan2 FROM Matricula WHERE idMatricula = matricula2;
SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Planes FROM Plan_Estudio WHERE idPlan_Estudio = plan2;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_mostrar_preguntas
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_mostrar_preguntas` (IN cedula BIGINT)
BEGIN

select 

AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Pregunta1, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') as Pregunta_1, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Pregunta2, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') as Pregunta_2, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_A, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') as Nombre,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_A, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') as Apellido

FROM Usuario

inner join Recuperacion on Recuperacion.IdRecuperacion = Usuario.Recuperacion_IdRecuperacion
inner join Administrativo on Administrativo.IdAdministrativo = Usuario.Administrativo_IdAdministrativo

WHERE idUsuario = cedula;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure actualizar_password
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `actualizar_password` (IN cedula BIGINT, IN pass varchar(256))
BEGIN
UPDATE Usuario SET Clave_U = AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(pass,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.') WHERE idUsuario = cedula;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_reporte_literal
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_reporte_literal` (IN id BIGINT, IN plan BIGINT)
BEGIN

SELECT AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Literal, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Literales, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Materia_M, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Materias, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_L, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Lapsos, 
Estudiante_ML,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombres, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellidos,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Seccion, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Seccion,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Planes,
Profesor_Guia,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombre_Profesor,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellido_Profesor,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Titulo_U_P, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Titulo_Profesor,
Observacion_ML,
Recomendaciones,
Descripcion

FROM Materia_has_Literal

INNER JOIN Materia ON Materia.idMateria = Materia_has_Literal.Materia_idMateria
INNER JOIN Lapso ON Lapso.idLapso = Materia_has_Literal.Lapso_idLapso
INNER JOIN Literal ON Literal.idLiteral = Materia_has_Literal.Literal_L
INNER JOIN Estudiante_II ON Estudiante_II.Cedula_EII = Materia_has_Literal.Estudiante_ML
INNER JOIN Matricula ON Matricula.idMatricula = Estudiante_II.Matricula_EII
INNER JOIN Plan_Estudio ON Plan_Estudio.idPlan_Estudio = Materia.Plan_Estudio_M
INNER JOIN Plan_Estudio_has_Seccion ON Plan_Estudio_has_Seccion.Plan_Estudio_idPlan_Estudio = Plan_Estudio.idPlan_Estudio
INNER JOIN Profesor ON Profesor.Cedula_P = Plan_Estudio_has_Seccion.Profesor_Guia
INNER JOIN Seccion ON Seccion.idSeccion = Plan_Estudio_has_Seccion.Seccion_idSeccion

WHERE Estudiante_ML = id AND Plan_Estudio_M = plan

GROUP BY Materias, Lapsos, Literales;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_lapso
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_lapso` ()
BEGIN
SELECT idLapso, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_L, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Lapso ORDER BY idLapso;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_materia_primaria
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_materia_primaria` ()
BEGIN
  SELECT idMateria, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Materia_M, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') 
  FROM Materia WHERE idMateria >= 4 AND idMateria <= 9 ORDER BY idMateria;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_nota1
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_nota1` (
	-- nota
    IN materia BIGINT,
    IN estudiante BIGINT,
	IN literal BIGINT,
    IN fecha DATE,
    IN lapso BIGINT,
    IN observacion VARCHAR (1024),
    IN recomendaciones VARCHAR (256)
)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Materia_has_Literal (Materia_idMateria, Lapso_idLapso, Literal_L, Fecha_carga, Observacion_ML, Recomendaciones, Estudiante_ML)
    VALUES(materia, lapso, literal, fecha, observacion, recomendaciones, estudiante);
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_planes
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_planes` ()
BEGIN
/* Planes de Estudio */

INSERT INTO Plan_Estudio (Nombre_PE, Tipo_PE, Observacion_PE, Colegio_PE)
VALUES 

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Primer Nivel','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Inicial','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Segundo Nivel','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Inicial','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Tercer Nivel','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Inicial','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Primer Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Básica','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Segundo Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Básica','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Tercer Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Básica','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Cuarto Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Básica','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Quinto Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Básica','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Sexto Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Básica','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Primer Año','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Media General','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Segundo Año','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Media General','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Tercer Año','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Media General','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Cuarto Año','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Media General','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Quinto Año','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Media General','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL,1);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_tipos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_tipos` ()
BEGIN
/* Tipos de Usuario */

INSERT INTO Tipo_Usuario (idTipo_Usuario, Tipo_T)
VALUES 

(0, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('SU','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(1, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Admin','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(2, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Asistente','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(3, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Visitante','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_parroquias
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_parroquias` ()
BEGIN
/* Parroquias */

INSERT INTO Estado (Estado)
VALUES (AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Anzoátegui','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
       
INSERT INTO Municipio (Municipio, Estado) 
VALUES (AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Simón Rodríguez','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1);
       
INSERT INTO Ciudad (Ciudad, Codigo_P, Municipio)
VALUES (AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('El Tigre','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('6050','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1);
       
INSERT INTO Parroquia (Parroquia, Ciudad)
VALUES (AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Edmundo Barrio','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Miguel Otero Silva','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_su
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_su` ()
BEGIN
/* Super Usuario */

INSERT INTO Administrativo (idAdministrativo, Nombres_A, Apellidos_A, Telefono_A, Correo_A)
VALUE (12345678, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Super','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Usuario','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336600','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));

INSERT INTO Recuperacion (idRecuperacion, Pregunta1, Pregunta2, Respuesta1, Respuesta2)
VALUE (12345678, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Lugar favorito','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Postre favorito','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Montaña','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Pastel','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));

INSERT INTO Usuario (idUsuario, Clave_U, Tipo_Usuario_idTipo_Usuario, Recuperacion_idRecuperacion, Administrativo_idAdministrativo)
VALUE (12345678, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Abc123???','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'), 0, 12345678, 12345678);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_lapsos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_lapsos` ()
BEGIN
/* Lapsos */

INSERT INTO Lapso (idLapso, Nombre_L)
VALUES 

(1, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Lapso 1','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(2, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Lapso 2','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(3, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Lapso 3','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(4, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Lapso Completo','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_secciones
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_secciones` ()
BEGIN
/* Secciones */

INSERT INTO Seccion (idSeccion, Seccion)
VALUES 

(1, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Sección A','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(2, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Sección B','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(3, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Sección C','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(4, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Sección U','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_mision_and_vision
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_mision_and_vision` ()
BEGIN
/* Mision, vision */

INSERT INTO M_and_V (idM_and_V, Mision, Vision)
VALUES 

(1,'Coloque su Misión aquí','Coloque su Visión aquí');
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_materias
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_materias` ()
BEGIN
/* Materias */

INSERT INTO Materia (Materia_M,HoraI_M, HoraF_M, Plan_Estudio_M)
VALUES 

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Clase de Primer Nivel','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','11:30',1),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Clase de Segundo Nivel','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','11:30',2),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Clase de Tercer Nivel','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','11:30',3),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Clase de Primer Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','11:30',4),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Clase de Segundo Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','11:30',5),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Clase de Tercer Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','11:30',6),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Clase de Cuarto Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','11:30',7),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Clase de Quinto Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','11:30',8),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Clase de Sexto Grado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','11:30',9),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Castellano I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','08:00',10),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Inglés I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'08:00','09:00',10),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Matemáticas I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'09:00','10:00',10),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Física I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'10:00','11:00',10),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Arte y Patrimonio I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'11:00','12:00',10),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Ciencias Naturales I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'12:00','13:00',10),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Geografía, Historia y Ciudadanía I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'13:00','14:00',10),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Orientación y Convivencia I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'14:00','15:00',10),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Grupos Estables I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'15:00','16:00',10),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Castellano II','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','08:00',11),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Inglés II','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'08:00','09:00',11),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Matemáticas II','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'09:00','10:00',11),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Biología II','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'10:00','11:00',11),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Geografía, Historia y Ciudadanía II','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'11:00','12:00',11),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Física II','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'12:00','13:00',11),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Arte y Patrimonio II','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'13:00','14:00',11),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Grupos Estables II','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'14:00','15:00',11),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Orientación y Convivencia II','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'15:00','16:00',11),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Castellano III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','08:00',12),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Inglés III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'08:00','09:00',12),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Matemáticas III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'09:00','10:00',12),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Física III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'10:00','11:00',12),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Física III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'11:00','12:00',12),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Quimica III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'12:00','13:00',12),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Biología III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'13:00','14:00',12),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Geografía, Historia y Cuidadanía III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'14:00','15:00',12),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Orientación y Convivencia III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'15:00','16:00',12),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Grupos Estables III','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'16:00','17:00',12),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Castellano IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','08:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Inglés IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'08:00','09:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Matemáticas IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'09:00','10:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Física IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'10:00','11:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Física IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'11:00','12:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Quimica IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'12:00','13:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Biología IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'13:00','14:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Geografía, Historia y Ciudadanía IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'14:00','15:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Formación Ciudadana IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'15:00','16:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Orientación y Convivencia IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'16:00','17:00',13),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Grupos Estables IV','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'17:00','18:00',13),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Castellano V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'07:00','08:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Inglés V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'08:00','09:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Matemáticas V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'09:00','10:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Educación Física V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'10:00','11:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Física V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'11:00','12:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Quimica V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'12:00','13:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Soberanía Nacional V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'13:00','14:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Grupos Estables V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'14:00','15:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Ciencia de la Tierra V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'15:00','16:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Geografía, Historia y Cuidadanía V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'16:00','17:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Orientación y Convivencia V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'17:00','18:00',14),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Biología V','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'18:00','19:00',14);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_literales
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_literales` ()
BEGIN
/* Literales */
INSERT INTO Literal (idLiteral, Literal, Descripcion)
VALUES 
(1, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'El alumno alcanzó todas las competencias y en algunos casos superó las expectativas previstas para el grado'),
(2, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('B','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),''),
(3, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('C','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),''),
(4, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('D','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),''),
(5, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('E','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),''),
(6, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'');
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_salones
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_salones` ()
BEGIN
/* Salones */

INSERT INTO Salon (Salon)
VALUES 

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-Preescolar','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-A','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-B','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-C','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-D','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-E','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-11','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-12','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-13','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-21','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-22','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-23','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-31','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-32','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-41','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-42','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-51','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('A-52','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_telefonos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_telefonos` ()
BEGIN
/* Telefonos */

INSERT INTO Telefonos (Telefono, Telefono2)
VALUES 

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336600','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336601','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336602','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336603','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336604','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336605','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336606','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336607','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336608','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04269336609','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_correos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_correos` ()
BEGIN
/* Correos */

INSERT INTO Correos (Correo, Correo2)
VALUES 

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm1@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm2@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm3@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm4@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm5@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm6@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm7@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm8@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('abelernestorm9@gmail.com','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_direcciones
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_direcciones` ()
BEGIN
/* Direcciones */

INSERT INTO Direccion (Casa, Calle, Vereda, Piso, Edificio, Punto_R, Parroquia)
VALUES 

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 1','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle A','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A1','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 2','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle B','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A2','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 3','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle C','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A3','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 4','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle D','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A4','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 5','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle E','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A5','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 6','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A6','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 7','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle G','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A7','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 8','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle H','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A8','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 9','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle I','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A9','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Casa 10','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Calle J','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),NULL, NULL, NULL,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Panadería A10','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1);


END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_contratos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_contratos` ()
BEGIN
/* Contrato */

INSERT INTO Contrato (VigenciaI_C, VigenciaF_C)
VALUES 

('2024-02-01','2024-03-01');

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_mensualidad
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_mensualidad` ()
BEGIN
/* Mensualidad */

INSERT INTO Mensualidad_RI (Mes_RI, VigenciaI_RI, VigenciaF_RI)
VALUES 

('Enero','2024-02-01','2024-03-01');

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_profesor
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_profesor` ()
BEGIN
/* Profesor */

INSERT INTO Profesor (Cedula_P, Nombres_P, Apellidos_P,Telefonos_P,Correos_P,Direccion_P,FechaN_P,Sexo_P,Titulo_U_P,Contrato_P)
VALUES 

(30840111,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Vito','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Corleone','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),11,1,1,'2002-12-05',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('M','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Doctor','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(30840112,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Michael','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Corleone','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),2,2,2,'2002-12-06',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('M','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Magister','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(30840113,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Santino','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Corleone','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),3,3,3,'2002-12-07',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('M','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Licenciado','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(30840114,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Cony','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Corleone','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),4,4,4,'2002-12-08',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Ingeniero','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(30840115,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Apolonia','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Di Corleone','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),5,5,5,'2002-12-09',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Bachiller','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1);

INSERT INTO Profesor_has_Materia (Cedula_p_id,Materia_id,Fecha_imparte,Observacion)
VALUES

(30840111,56,'2020-01-01',NULL),
(30840112,57,'2020-01-01',NULL),
(30840113,58,'2020-01-01',NULL),
(30840114,59,'2020-01-01',NULL),
(30840115,60,'2020-01-01',NULL);

INSERT INTO Plan_Estudio_has_Seccion (Plan_Estudio_idPlan_Estudio, Seccion_idSeccion, Profesor_Guia,Salon,Observacion)
VALUES
(6,1,30840111,6,NULL),
(7,2,30840111,7,NULL),
(8,1,30840112,8,NULL),
(9,2,30840112,9,NULL),
(10,1,30840113,10,NULL),
(11,2,30840113,11,NULL),
(12,1,30840114,1,NULL),
(13,3,30840114,2,NULL),
(14,1,30840115,3,NULL),
(5,4,30840115,4,NULL);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_representante
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_representante` ()
BEGIN

INSERT INTO Representante_I (Cedula_RI, Nombres_RI, Apellidos_RI,Telefono_RI,Correo_RI,Direccion_RI,FechaN_RI,Sexo_RI,Tipo_RI)
VALUES 

(30840116,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Mirai','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Aberu','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),6,6,6,'2002-12-05',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Primaria','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(30840117,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Kaori','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Aberu','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),7,7,7,'2002-12-06',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Primaria','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(30840118,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Hanako','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Aberu','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),8,8,8,'2002-12-07',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('M','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Mixto','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(30840119,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Kimura','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Aberu','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),9,9,9,'2002-12-08',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Bachiller','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.')),
(30840120,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Lucy','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Aberu','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),10,10,10,'2002-12-09',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Bachiller','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_matricula
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_matricula` ()
BEGIN

INSERT INTO Matricula (idMatricula, Observacion, Plan_M)
VALUES 

(2024,NULL,1),
(2023,NULL,2),
(2022,NULL,3),

(2021,NULL,4),
(2020,NULL,5),
(2019,NULL,6),
(2018,NULL,7),
(2017,NULL,8),
(2016,NULL,9),

(2015,NULL,10),
(2014,NULL,11),
(2013,NULL,12),
(2012,NULL,13),
(2011,NULL,14);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_estudiante
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_estudiante` ()
BEGIN

INSERT INTO Estudiante_II (Cedula_EII, Nombres_EII, Apellidos_EII, Matricula_EII,FechaN_EII,Sexo_EII,Seccion_EII)
VALUES 

(32840111,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Sydney','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Blackwood','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'2019','2012-12-05',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(32840112,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Anastasia','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Blackwood','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'2018','2012-12-06',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1),
(32840113,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Abella','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Di Cristina','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'2017','2012-12-07',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),2),
(32840114,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Angélica','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Aberu','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'2022','2012-12-08',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),2),
(32840115,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Lorena','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('Silva','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),'2021','2012-12-09',AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('F','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),3);

INSERT INTO Estudiante_has_Representante (idEstudiante, idRepresentante, Observacion)
VALUES
(32840111,30840116,NULL),
(32840112,30840117,NULL),
(32840113,30840118,NULL),
(32840114,30840119,NULL),
(32840115,30840120,NULL);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure datos_colegio
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `datos_colegio` ()
BEGIN

INSERT INTO Telefonos (Telefono, Telefono2)
VALUES 

(AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('02832414393','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('04120966301','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));

INSERT INTO Colegio (idColegio, Director_nombre, Director_cedula, Colegio_telefonos)
VALUES 

(1,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('María Elena Quijada de Fermín','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT('5992473','Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'),1);



END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_representante_estudiante
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_representante_estudiante` (cedula BIGINT, representante BIGINT, observacion VARCHAR(256))
BEGIN
START TRANSACTION;
    
    INSERT INTO Estudiante_has_Representante(idEstudiante, idRepresentante, Observacion)
	VALUES(cedula, representante, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(observacion,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_materia_profesor
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_materia_profesor` (
	-- profesor
    IN p_cedula BIGINT, 
    IN fecha_imparte DATE, 
	IN observacion VARCHAR(256), 
    IN p_materia BIGINT
)
BEGIN

	START TRANSACTION;
    
    INSERT INTO Profesor_has_Materia (Cedula_P_id, Materia_id, Fecha_imparte, Observacion)
    VALUES (p_cedula,p_materia,fecha_imparte,AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(observacion,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_literal
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_literal` ()
BEGIN
SELECT idLiteral, AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Literal, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') FROM Literal ORDER BY idLiteral;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_insertar_profesor_guia
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_insertar_profesor_guia` (
	-- Tipo
	IN profesor BIGINT,
    IN plan BIGINT,
    IN seccion BIGINT,
    IN salon BIGINT,
    IN Observacion VARCHAR (256)

)
BEGIN
	START TRANSACTION;
    
    INSERT INTO Plan_Estudio_has_Seccion(Plan_Estudio_idPlan_Estudio,Seccion_idSeccion,Profesor_Guia,Salon,Observacion)
	VALUES(plan,seccion,profesor,salon, AES_ENCRYPT(DES_ENCRYPT(AES_ENCRYPT(Observacion,'Mirai-Aberu.'),'Kaori-Aberu.'),'Sydney-Blackwood.'));
    
	COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_matricula
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_matricula` ()
BEGIN

SELECT idMatricula,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.')

FROM Matricula 

INNER JOIN Plan_Estudio ON Plan_Estudio.idPlan_Estudio = Matricula.Plan_M

ORDER BY idMatricula;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_listar_contratos
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_listar_contratos` ()
BEGIN

SELECT idContrato, VigenciaI_C, VigenciaF_C 

FROM Contrato 

ORDER BY idContrato;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_reporte_retiro
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_reporte_retiro` (IN id BIGINT, IN plan BIGINT)
BEGIN

SELECT 

Estudiante_ML,
FechaN_EII,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombres, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellidos,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Planes,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Tipo_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Tipo_Plan,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Director_Nombre, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombre_Director,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Director_Cedula, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Cedula_Director,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Telefono_Colegio,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono2, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Telefono2_Colegio

FROM Materia_has_Literal

INNER JOIN Materia ON Materia.idMateria = Materia_has_Literal.Materia_idMateria
INNER JOIN Estudiante_II ON Estudiante_II.Cedula_EII = Materia_has_Literal.Estudiante_ML
INNER JOIN Matricula ON Matricula.idMatricula = Estudiante_II.Matricula_EII
INNER JOIN Plan_Estudio ON Plan_Estudio.idPlan_Estudio = Materia.Plan_Estudio_M
INNER JOIN Colegio ON Colegio.idColegio = Plan_Estudio.Colegio_PE
INNER JOIN Telefonos ON Telefonos.idTelefonos = Colegio.Colegio_telefonos

WHERE Estudiante_ML = id AND Plan_Estudio_M = plan;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_reporte_estudio
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_reporte_estudio` (IN id BIGINT)
BEGIN

SELECT 

Cedula_EII,
FechaN_EII,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombres, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellidos,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Planes,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Tipo_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Tipo_Plan,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Director_Nombre, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombre_Director,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Director_Cedula, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Cedula_Director,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Telefono_Colegio,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono2, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Telefono2_Colegio

FROM Estudiante_II

INNER JOIN Matricula ON Matricula.idMatricula = Estudiante_II.Matricula_EII
INNER JOIN Plan_Estudio ON Plan_Estudio.idPlan_Estudio = Matricula.Plan_M
INNER JOIN Colegio ON Colegio.idColegio = Plan_Estudio.Colegio_PE
INNER JOIN Telefonos ON Telefonos.idTelefonos = Colegio.Colegio_telefonos

WHERE Cedula_EII = id;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_reporte_aceptacion
-- -----------------------------------------------------

DELIMITER $$
USE `Batalla_de_Niquitao`$$
CREATE PROCEDURE `sp_reporte_aceptacion` (IN id BIGINT)
BEGIN

SELECT 

Cedula_EII,
FechaN_EII,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombres, 
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_EII, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellidos,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombre_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Planes,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Tipo_PE, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Tipo_Plan,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Director_Nombre, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombre_Director,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Director_Cedula, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Cedula_Director,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Telefono_Colegio,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Telefono2, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Telefono2_Colegio,
Cedula_RI,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Nombres_RI, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Nombres_Representante,
AES_DECRYPT(DES_DECRYPT(AES_DECRYPT(Apellidos_RI, 'Sydney-Blackwood.'),'Kaori-Aberu.'),'Mirai-Aberu.') AS Apellidos_Representante

FROM Estudiante_II

INNER JOIN Matricula ON Matricula.idMatricula = Estudiante_II.Matricula_EII
INNER JOIN Plan_Estudio ON Plan_Estudio.idPlan_Estudio = Matricula.Plan_M
INNER JOIN Colegio ON Colegio.idColegio = Plan_Estudio.Colegio_PE
INNER JOIN Telefonos ON Telefonos.idTelefonos = Colegio.Colegio_telefonos
INNER JOIN Estudiante_has_Representante ON Estudiante_has_Representante.idEstudiante = Estudiante_II.Cedula_EII
INNER JOIN Representante_I ON Representante_I.Cedula_RI = Estudiante_has_Representante.idRepresentante

WHERE Cedula_EII = id;

END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
